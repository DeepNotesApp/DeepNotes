version: 2.1

orbs:
  android: circleci/android@2.1.2
  node: circleci/node@5.0.2
  win: circleci/windows@4.1.1

jobs:
  deploy-macos:
    macos:
      xcode: 14.2.0
    steps:
      - checkout
      - node/install:
          install-yarn: false
          node-version: '20.9.0'
      - run:
          name: Install pnpm package manager
          command: npm install -g pnpm@latest
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - &deploy-win-pnpm-cache win-pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install node dependencies
          command: pnpm install
      - save_cache:
          name: Save pnpm Package Cache
          key: *deploy-win-pnpm-cache
          paths:
            - node_modules
      - run:
          name: Build packages
          command: pnpm run repo:build
      - run:
          name: Build Electron app
          command: pnpm run build:electron:publish

  deploy-win-appx:
    executor:
      name: win/default
      shell: bash.exe
    steps:
      - checkout
      - run:
          name: Install Node.js 18
          command: nvm install 18 && nvm use 18
      - run:
          name: Install pnpm package manager
          command: npm install -g pnpm@latest
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - &deploy-win-pnpm-cache win-pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install node dependencies
          command: pnpm install
      - save_cache:
          name: Save pnpm Package Cache
          key: *deploy-win-pnpm-cache
          paths:
            - node_modules
      - run:
          name: Build packages
          command: pnpm run repo:build
      - run:
          name: Build AppX
          command: pnpm run build:electron:publish

  deploy-win-nsis:
    executor:
      name: win/default
      shell: bash.exe
    steps:
      - checkout
      - run:
          name: Install Node.js 18
          command: nvm install 18 && nvm use 18
      - run:
          name: Install pnpm package manager
          command: npm install -g pnpm@latest
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - &deploy-win-pnpm-cache win-pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install node dependencies
          command: pnpm install
      - save_cache:
          name: Save pnpm Package Cache
          key: *deploy-win-pnpm-cache
          paths:
            - node_modules
      - run:
          name: Build packages
          command: pnpm run repo:build
      - run:
          name: Build NSIS
          command: NSIS=true pnpm run build:electron:publish

  deploy-linux:
    docker:
      - image: node:18
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install pnpm package manager
          command: npm install -g pnpm@latest
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - &deploy-linux-pnpm-cache node:18-pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install node dependencies
          command: pnpm install
      - save_cache:
          name: Save pnpm Package Cache
          key: *deploy-linux-pnpm-cache
          paths:
            - node_modules
      - run:
          name: Build packages
          command: pnpm run repo:build
      - run:
          name: Build Linux app
          command: pnpm run build:electron:publish

  deploy-android:
    docker:
      - image: cimg/android:2022.07
    resource_class: small
    steps:
      - checkout
      - node/install:
          install-yarn: false
          node-version: '20.9.0'
      - run:
          name: Install pnpm package manager
          command: npm install -g pnpm@latest
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - &deploy-android-pnpm-cache cimg/android:2022.07-pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install node dependencies
          command: pnpm install
      - save_cache:
          name: Save pnpm Package Cache
          key: *deploy-android-pnpm-cache
          paths:
            - node_modules
      - run:
          name: Build packages
          command: pnpm run repo:build
      - run:
          name: Build Android app
          command: pnpm run build:android
      - run:
          name: Install Fastlane
          command: sudo gem install fastlane
      - run:
          name: Create Android keystore
          command: echo $BASE64_KEYSTORE | base64 -d | tee apps/client/src-capacitor/android/app/deepnotes.keystore > /dev/null
      - run:
          name: Create keystore.properties
          command: |
            printf 'releaseKeyAlias=%s\nreleaseKeyPassword=%s\nreleaseKeyStore=%s\nreleaseStorePassword=%s' \
            $RELEASE_KEY_ALIAS $RELEASE_KEY_PASSWORD $RELEASE_KEYSTORE $RELEASE_STORE_PASSWORD > tee apps/client/src-capacitor/android/keystore.properties
      - run:
          name: Create Google Play key
          command: echo $GOOGLE_PLAY_KEY > apps/client/src-capacitor/android/fastlane/deepnotes-google-api-secret.json
      - run: |
          cd apps/client/src-capacitor/android
          bundle install
      - run: |
          cd apps/client/src-capacitor/android
          bundle exec fastlane playstore

workflows:
  version: 2

  deploy:
    jobs:
      - deploy-macos:
          filters:
            branches:
              only: main
